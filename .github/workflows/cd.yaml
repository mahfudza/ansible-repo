name: 'CD'

on:
  pull_request:
    types:
      - closed
    paths:
      - '**/version'
  workflow_dispatch:
    inputs:
      TAG:
        description: 'Image tag to deploy'
        required: true
        type: string
      ROLE:
        description: 'Role to deploy'
        required: true
        type: string

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      CHANGED_ROLE: ${{ steps.filter.outputs.roles_files }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Dump GitHub context
      id: github_context_step
      run: echo '${{ toJSON(github) }}'
    - name: Get the changes
      id: filter
      uses: dorny/paths-filter@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        list-files: json
        filters: |
          roles:
            - 'playbook/roles/**/version'
  # check_tag:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     TAG: ${{ steps.image_tag.outputs.tag }}
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v3
  #     with:
  #       fetch-depth: 0
  #   - name: Dump GitHub context
  #     id: github_context_step
  #     run: echo '${{ toJSON(github) }}'
  #   - name: Get image tag
  #     id: image_tag
  #     run: |
  #       tag=`git log -n1 --format='%B' --no-merges HEAD | awk '/image_tag/ {$1="";print}'|tr -d ' '`
  #       echo "tag=$tag" >> $GITHUB_OUTPUT
  run:
    if: github.event.pull_request.merged == true && needs.changes.outputs.CHANGED_ROLE != ''
    needs: changes
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        roles: ${{ fromJson(needs.changes.outputs.CHANGED_ROLE) }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: webfactory/ssh-agent
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIV_KEY }}
    - name: Check the changed role
      run: |
        echo '${{ toJson(needs.changes.outputs.CHANGED_ROLE) }}'
    - name: roles
      id: role
      run: |
        role=`echo ${{ matrix.roles }} | cut -d'/' -f3`
        version=`cat ${{ matrix.roles }}`
        echo "role=$role" >> $GITHUB_OUTPUT
        echo "version=$version" >> $GITHUB_OUTPUT
        echo $role.$version
    - name: Deploy
      run: |
        echo ${{ secrets.VAULT_PASSWORD }} > vault_file
        ansible-playbook -i inventory/worker_hosts playbook/app.yaml --tag "${{ steps.role.outputs.role }}" --extra-vars "APP_IMAGE_TAG=`echo ${{ steps.role.outputs.version }}`" --vault-password-file vault_file -vv

  run_from_input:
    if: inputs.TAG != '' && inputs.ROLE != ''
    needs: changes
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: webfactory/ssh-agent
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIV_KEY }}
    - name: Deploy
      run: |
        echo ${{ secrets.VAULT_PASSWORD }} > vault_file
        ansible-playbook -i inventory/worker_hosts playbook/app.yaml --tags "${{ inputs.ROLE  }}" --extra-vars "APP_IMAGE_TAG=`echo ${{ inputs.TAG }}`" --vault-password-file vault_file -v


